/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.ifba.atividade07.view;

/**
 *
 * @author ADMIN
 */
public class FrmFatorial extends javax.swing.JFrame {
    //Clase fatorial com seus metodos
    public class Fatorial{
        //Variáveis para armazenar os valores
        int valor;
        //A variavel int acarreta em um estouro(overflow) pelo seu limite de valor, a partir de 13 fatorial já da problema - usaremos o long então
        long resultado;
        String formula;
        //Este método recebe o valor e faz o calculo do fatorial
        public void setValor(int num){
            //inicialização de cada variavel a ser trabalhada
            valor = num;
            resultado = 1;
            formula = "";
            //Aqui o for inicia no numero informado e vai decrementando de forma a calcular o fatorial
            for(int i = num; i>0; i--){
                //vamos multiplicando cada valor pelo subsequente a partir do valor informado
                resultado *= i;
                //Vou guardando os numeros dentro da string formula como caracteres, para facilitar a formatação mais a frente
                formula += i;
                //Enquanto o valor de "i" for diferete de 1(um), ele segue concatenando com o "x" de modo a ficar no modelo 5 x 4 x 3 x 2 x 1
                if(i != 1){
                    formula += " x ";
                }else{
                    formula += " = "; //Quando for igual a 1(um) insere o caracter de igual ao final da string
                }
                
            }
        }
        //Cada um dos metodos abaixo tem somente a função de retornar os valores
        public long getFatorial(){
            return resultado;
        }
        public String getFormula(){
            return formula;
        }
    }
    /**
     * Creates new form FrmFatorial
     */
    public FrmFatorial() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spnValor = new javax.swing.JSpinner();
        lblValorFatorial = new javax.swing.JLabel();
        lblTitulo = new javax.swing.JLabel();
        btnCalcular = new javax.swing.JButton();
        lblResultadoCompleto = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FATORIAL");

        spnValor.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        lblValorFatorial.setText("Valor");

        lblTitulo.setText("Formula = Resultado");

        btnCalcular.setText("Calcular");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        lblResultadoCompleto.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblValorFatorial)
                        .addGap(18, 18, 18)
                        .addComponent(spnValor, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCalcular))
                    .addComponent(lblTitulo)
                    .addComponent(lblResultadoCompleto, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spnValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblValorFatorial)
                    .addComponent(btnCalcular))
                .addGap(27, 27, 27)
                .addComponent(lblTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblResultadoCompleto, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        // TODO add your handling code here:
        //Coleto o valor do spinner e faço somente um casting
        int num = (int) spnValor.getValue();
        
        //Aqui estou instanciando a classe Fatorial, criando um novo objeto, o "fat"
        Fatorial fat = new Fatorial();
        //Através do objeto da classe Fatorial posso usar seus metodos, neste caso o setValor, para fazer o calculo
        fat.setValor(num);
        
        //Em um único label posso concatenar a formula e o resultado, através dos metodos da classe
        lblResultadoCompleto.setText("<html>"+fat.getFormula()+Long.toString(fat.getFatorial())+"<html>");
    }//GEN-LAST:event_btnCalcularActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmFatorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmFatorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmFatorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmFatorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmFatorial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalcular;
    private javax.swing.JLabel lblResultadoCompleto;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblValorFatorial;
    private javax.swing.JSpinner spnValor;
    // End of variables declaration//GEN-END:variables
}
